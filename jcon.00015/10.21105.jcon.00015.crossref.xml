<?xml version="1.0" encoding="UTF-8"?>
<doi_batch xmlns="http://www.crossref.org/schema/4.4.0" xmlns:ai="http://www.crossref.org/AccessIndicators.xsd" xmlns:rel="http://www.crossref.org/relations.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="4.4.0" xsi:schemaLocation="http://www.crossref.org/schema/4.4.0 http://www.crossref.org/schemas/crossref4.4.0.xsd">
  <head>
    <doi_batch_id>f74f331d544ec9ac9e23e7148cd8073d</doi_batch_id>
    <timestamp>20200726160532</timestamp>
    <depositor>
      <depositor_name>JOSS Admin</depositor_name>
      <email_address>admin@theoj.org</email_address>
    </depositor>
    <registrant>The Open Journal</registrant>
  </head>
  <body>
    <journal>
      <journal_metadata>
        <full_title>JuliaCon Proceedings</full_title>
        <abbrev_title>JCON</abbrev_title>
        <issn media_type="electronic">2642-4029</issn>
        <doi_data>
          <doi>10.21105/jcon</doi>
          <resource>https://proceedings.juliacon.org</resource>
        </doi_data>
      </journal_metadata>
      <journal_issue>
        <publication_date media_type="online">
          <month>07</month>
          <year>2020</year>
        </publication_date>
        <journal_volume>
          <volume>1</volume>
        </journal_volume>
        <issue>1</issue>
      </journal_issue>
      <journal_article publication_type="full_text">
        <titles>
          <title>A general-purpose toolbox for efficient Kronecker-based learning</title>
        </titles>
        
        <publication_date>
          <month>07</month>
          <day>26</day>
          <year>2020</year>
        </publication_date>
        <pages>
          <first_page>15</first_page>
        </pages>
        <publisher_item>
          <identifier id_type="doi">10.21105/jcon.00015</identifier>
        </publisher_item>
        <ai:program name="AccessIndicators">
          <ai:license_ref applies_to="vor">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="am">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
          <ai:license_ref applies_to="tdm">http://creativecommons.org/licenses/by/4.0/</ai:license_ref>
        </ai:program>
        <rel:program>
          <rel:related_item>
            <rel:description>Software archive</rel:description>
            <rel:inter_work_relation relationship-type="references" identifier-type="doi">https://doi.org/10.5281/zenodo.3463941</rel:inter_work_relation>
          </rel:related_item>
          <rel:related_item>
            <rel:description>GitHub review issue</rel:description>
            <rel:inter_work_relation relationship-type="hasReview" identifier-type="uri">https://github.com/JuliaCon/proceedings-review/issues/15</rel:inter_work_relation>
          </rel:related_item>
        </rel:program>
        <doi_data>
          <doi>10.21105/jcon.00015</doi>
          <resource>https://proceedings.juliacon.org/papers/10.21105/jcon.00015</resource>
          <collection property="text-mining">
            <item>
              <resource mime_type="application/pdf">https://proceedings.juliacon.org/papers/10.21105/jcon.00015.pdf</resource>
            </item>
          </collection>
        </doi_data>
        <citation_list>
          <citation key="ref1">
            <doi>10.1109/TPDS.2018.2872064</doi>
          </citation>
          <citation key="ref2">
            <unstructured_citation>Scientific computing is increasingly incorporating the advancements in machine learning and the ability to work with large amounts of data. At the same time, machine learning models are becoming increasingly sophisticated and exhibit many features often seen in scientific computing, stressing the capabilities of machine learning frameworks. Just as the disciplines of scientific computing and machine learning have shared common underlying infrastructure in the form of numerical linear algebra, we now have the opportunity to further share new computational infrastructure, and thus ideas, in the form of Differentiable Programming. We describe Zygote, a Differentiable Programming system that is able to take gradients of general program structures. We implement this system in the Julia programming language. Our system supports almost all language constructs (control flow, recursion, mutation, etc.) and compiles high-performance code without requiring any user intervention or refactoring to stage computations. This enables an expressive programming model for deep learning, but more importantly, it enables us to incorporate a large ecosystem of libraries in our models in a straightforward way. We discuss our approach to automatic differentiation, including its support for advanced techniques such as mixed-mode, complex and checkpointed differentiation, and present several examples of differentiating programs., arXiv, 1907.07587, Innes, Mike and Edelman, Alan and Fischer, Keno and Rackauckas, Chris and Saba, Elliot and Shah, Viral B and Tebbutt, Will, 1907.07587, :Users/michielstock/Library/Application Support/Mendeley Desktop/Downloaded/Innes et al. - Unknown - &#x2202;P A Differentiable Programming System to Bridge Machine Learning and Scientific Computing.pdf:pdf, A differentiable programming system to bridge machine learning and scientific computing, https://arxiv.org/pdf/1907.07587.pdf http://arxiv.org/abs/1907.07587, 2019</unstructured_citation>
          </citation>
          <citation key="ref3">
            <unstructured_citation>In this paper, we review basic properties of the Kronecker product, and give an overview of its history and applications. We then move on to introducing the symmetric Kronecker product, and we derive sev- eral of its properties. Furthermore, we show its application in finding search directions in semidefinite programming., Sch&#xE4;cke, Kathrin, :Users/michielstock/Library/Application Support/Mendeley Desktop/Downloaded/Sch&#xE4;cke - 2013 - On the Kronecker Product.pdf:pdf, 1&#x2013;35, On the Kronecker Product, https://www.math.uwaterloo.ca/&#xA0;hwolkowi/henry/reports/kronthesisschaecke04.pdf, 2013</unstructured_citation>
          </citation>
          <citation key="ref4">
            <doi>10.1162/neco_a_01096</doi>
          </citation>
          <citation key="ref5">
            <doi>10.1109/TNNLS.2017.2727545</doi>
          </citation>
          <citation key="ref6">
            <doi>10.1016/S0377-0427(00)00393-9</doi>
          </citation>
          <citation key="ref7">
            <unstructured_citation>How can we model networks with a mathematically tractable model that allows for rigorous analysis of network properties? Networks exhibit a long list of surprising properties: heavy tails for the degree distribution; small diameters; and densification and shrinking diameters over time. Most present network models either fail to match several of the above properties, are complicated to analyze mathematically, or both. In this paper we propose a generative model for networks that is both mathematically tractable and can generate networks that have the above mentioned properties. Our main idea is to use the Kronecker product to generate graphs that we refer to as "Kronecker graphs". First, we prove that Kronecker graphs naturally obey common network properties. We also provide empirical evidence showing that Kronecker graphs can effectively model the structure of real networks. We then present KronFit, a fast and scalable algorithm for fitting the Kronecker graph generation model to large real networks. A naive approach to fitting would take super- exponential time. In contrast, KronFit takes linear time, by exploiting the structure of Kronecker matrix multiplication and by using statistical simulation techniques. Experiments on large real and synthetic networks show that KronFit finds accurate parameters that indeed very well mimic the properties of target networks. Once fitted, the model parameters can be used to gain insights about the network structure, and the resulting synthetic graphs can be used for null- models, anonymization, extrapolations, and graph summarization., arXiv, 0812.4905, Leskovec, Jure and Chakrabarti, Deepayan and Kleinberg, Jon and Faloutsos, Christos and Ghahramani, Zoubin, 0812.4905, :Users/michielstock/Library/Application Support/Mendeley Desktop/Downloaded/Leskovec et al. - 2008 - Kronecker graphs an approach to modeling networks.pdf:pdf, 1532-4435, 0012365X, Journal of Machine Learning Research, Kronecker graphs,graph genera-tors,graph mining,network analysis,network evolution,network models,social networks, 985&#x2013;1042, 17746742, Kronecker graphs: an approach to modeling networks, https://cs.stanford.edu/&#xA0;jure/pubs/kronecker-jmlr10.pdf http://arxiv.org/abs/0812.4905, 11, 2008</unstructured_citation>
          </citation>
        </citation_list>
      </journal_article>
    </journal>
  </body>
</doi_batch>
